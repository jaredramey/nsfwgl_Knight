#version 410

layout(location=0) in vec4 Position;
layout(location=1) in vec4 Normal;
layout(location=2) in vec4 Tangent;
layout(location=3) in vec2 TexCoord;

out vec4 vPosition;
out vec4 vNormal;
out vec2 vTexCoord;

out mat3 TBN;

uniform mat4 View;
uniform mat4 Projection;
uniform mat4 ProjectionView;
uniform mat4 Model;

void main()
{
	vPosition =  View * Model * Position;	
	vTexCoord = TexCoord;
	gl_Position =  Projection * View * Model * Position;
	
	
	
	vNormal = normalize(View * Model * Normal);
	
	vec3 dNormal    = normalize(View * Model * Normal).xyz;
	vec3 dTangent   = normalize(View * Model * Tangent).xyz;
	vec3 dBiTangent = normalize(cross(vNormal.xyz,dTangent.xyz));
	
	TBN = mat3(dTangent, dBiTangent, dNormal);	
}

/*
mat3 TBN = mat3(normalize(vTangent.xyz), 
					normalize(vBiTangent), 
					normalize(vNormal.xyz));
	
	vec3 N = TBN * normalize(texture(Normal,vTexCoord).xyz * 2 -1);*/